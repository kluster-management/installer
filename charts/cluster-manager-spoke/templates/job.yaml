apiVersion: batch/v1
kind: Job
metadata:
  name: {{ include "cluster-manager-spoke.fullname" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "cluster-manager-spoke.labels" . | nindent 4 }}
spec:
  ttlSecondsAfterFinished: 0
  backoffLimit: 3
  template:
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "cluster-manager-spoke.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: {{ .Values.kubectl.image }}
          imagePullPolicy: {{ .Values.kubectl.pullPolicy }}
          command:
            - sh
            - -c
            - |
                set -x; \
                sleep 2; \
                ns={{ default .Release.Namespace $.Values.secret.namespace }}; \
                kubectl get ns $ns|| kubectl create ns $ns; \
                kubectl apply -f - <<EOF
                apiVersion: v1
                kind: Secret
                metadata:
                  name: {{ $.Values.secret.name }}
                  namespace: {{ default .Release.Namespace $.Values.secret.namespace }}
                  labels:
                    {{- include "cluster-manager-spoke.labels" $ | nindent 20 }}
                stringData:
                  values.yaml: |
                    clusterMetadata: {{ $.Values.clusterMetadata | toJson }}
                EOF
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      restartPolicy: Never
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
